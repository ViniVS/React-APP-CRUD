[{"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\index.jsx":"1","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\App.jsx":"2","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\reportWebVitals.jsx":"3","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\Users.jsx":"4","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\UserCreate.jsx":"5","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\UserUpdate.jsx":"6","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\Navbar.jsx":"7","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\LoginPage.jsx":"8","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\register.jsx":"9","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\HomePage.jsx":"10"},{"size":552,"mtime":1679539534297,"results":"11","hashOfConfig":"12"},{"size":876,"mtime":1681322963337,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1679539534297,"results":"14","hashOfConfig":"12"},{"size":5469,"mtime":1679539534297,"results":"15","hashOfConfig":"12"},{"size":6009,"mtime":1681332808735,"results":"16","hashOfConfig":"12"},{"size":5231,"mtime":1679604573279,"results":"17","hashOfConfig":"12"},{"size":1322,"mtime":1679604596208,"results":"18","hashOfConfig":"12"},{"size":2529,"mtime":1681325681382,"results":"19","hashOfConfig":"12"},{"size":3554,"mtime":1681306999710,"results":"20","hashOfConfig":"12"},{"size":7067,"mtime":1681331776175,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1y9gn1c",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\index.jsx",[],[],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\App.jsx",["56","57"],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\reportWebVitals.jsx",[],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\Users.jsx",["58","59"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst handleSubmit = event => {\r\n  event.preventDefault();\r\n  window.location.href = '/create';\r\n}\r\n\r\nexport default function UserList() {\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    UsersGet()\r\n  }, [])\r\n\r\n  \r\n  const UsersGet = async () => {\r\n    try {\r\n      const response = await fetch(\"https://r4wj0utagf.execute-api.us-east-1.amazonaws.com/prod/dynamodb\");\r\n      const result = await response.json();\r\n      console.log(response);\r\n      if (result && typeof result === 'object') {\r\n        const user = {\r\n          id: result.id,\r\n          firstName: result.firstName,\r\n          lastName: result.lastName,\r\n          email: result.email,\r\n          userName: result.userName,\r\n          cpfCnpj: result.cpfCnpj\r\n        };\r\n        function compare(a, b) {\r\n          if (a.id < b.id) {\r\n            return -1;\r\n          }\r\n          if (a.id > b.id) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n        setUsers(result.map((user) => ({ ...user, key: user.id })).sort(compare));\r\n        console.log(result)\r\n      }else {\r\n        console.error('API response is not an array or object:', result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data from API Gateway:', error);\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  const UpdateUser = id => {\r\n    window.location = '/update/'+id\r\n  }\r\n\r\n  \r\n\r\n  const UserDelete = (id) => {\r\n    fetch(`https://r4wj0utagf.execute-api.us-east-1.amazonaws.com/prod/deleteusuarios?id=${id}`, {\r\n      method: 'GET'\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(id)\r\n          UsersGet();\r\n        } else {\r\n          throw new Error(`Failed to delete user. Status code: ${res.status}`);\r\n        }\r\n      })\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container className={classes.container} maxWidth=\"lg\">    \r\n        <Paper className={classes.paper}>\r\n          <Box display=\"flex\">\r\n            <Box flexGrow={1}>\r\n              <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                USERS\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={handleSubmit}>\r\n              CREATE\r\n            </Button>\r\n          </Box>\r\n          </Box>\r\n          <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"right\">ID</TableCell>\r\n                <TableCell align=\"left\">First</TableCell>\r\n                \r\n                <TableCell align=\"left\">Last Name</TableCell>\r\n                <TableCell align=\"left\">Email</TableCell>\r\n                <TableCell align=\"left\">Username</TableCell>\r\n                <TableCell align=\"left\">CPF ou CNPJ</TableCell>\r\n                <TableCell align=\"left\">Data</TableCell>\r\n                <TableCell align=\"center\">Action</TableCell>\r\n                \r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users.map((result) => (\r\n                <TableRow key={result.id}>\r\n                  <TableCell align=\"right\">{result.id}</TableCell>\r\n                  <TableCell align=\"left\">{result.firstName}</TableCell>\r\n                  <TableCell align=\"left\">{result.lastName}</TableCell>\r\n                  <TableCell align=\"left\">{result.email}</TableCell>\r\n                  <TableCell align=\"left\">{result.userName}</TableCell>\r\n                  <TableCell align=\"left\">{result.cpfCnpj}</TableCell>\r\n                  <TableCell align=\"left\">{result.date}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                    <Button key={`edit-${result.id}`} onClick={() => UpdateUser(result.id)}>Edit</Button>\r\n                    <Button key={`delete-${result.id}`} onClick={() => UserDelete(result.id)}>Del</Button>\r\n                  </ButtonGroup>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n}","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\UserCreate.jsx",["60","61"],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\UserUpdate.jsx",["62"],[],"import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function UserUpdate() {\r\n  const [firstname, setFname] = useState('');\r\n  const [lastname, setLname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [cpfCnpj, setCpfCnpj] = useState('');\r\n  const [date, setDate] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const { id } = useParams();\r\n  const parsedId = parseInt(id);\r\n  \r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    var data = {\r\n      'id': parsedId,\r\n      'firstname': firstname,\r\n      'lastname': lastname,\r\n      'username': username,\r\n      'email': email,\r\n      'cpfCpnj': cpfCnpj,\r\n      'DATE': date,\r\n\r\n    }\r\n  }\r\n    \r\n  const handleUpdateUser = (parsedId) => {\r\n      fetch(`https://r4wj0utagf.execute-api.us-east-1.amazonaws.com/prod/edituser?id=${id}&varfirstName=${firstname}&varlastName=${lastname}&varEmail=${email}&varUserName=${username}&varCpfCnpj=${cpfCnpj}&varDate=${date}`, {\r\n        method: 'GET'\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            window.location.href = '/';\r\n          } else {\r\n            console.log(parsedId)\r\n            window.alert(id)\r\n            throw new Error(`Failed to update user. Status code: ${id}`);\r\n          }\r\n        })\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleCpfCnpjChange = (e) => {\r\n    const value = e.target.value;\r\n    const regex = /^[0-9]+$/;\r\n\r\n    if (regex.test(value)) {\r\n      setCpfCnpj(value);\r\n      setIsError(false);\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n      <Container maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          User\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"firstname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                onChange={(e) => setFname(e.target.value)}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                onChange={(e) => setLname(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"CPFCNPJ\"\r\n                  label=\"CPF ou CNPJ\"\r\n                  onChange={handleCpfCnpjChange}\r\n                  value={cpfCnpj}\r\n                  error={isError}\r\n                  helperText={isError ? 'Digite apenas números' : ''}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"DATE\"\r\n                  label=\"Data\"\r\n                  onChange={(e) => setDate(e.target.value)}\r\n                  \r\n                />\r\n            </Grid>\r\n\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleUpdateUser} \r\n            className={classes.submit}\r\n          >\r\n            Update\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\Navbar.jsx",[],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\LoginPage.jsx",["63","64"],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\register.jsx",["65"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport bcrypt from \"bcryptjs\"; // importa a biblioteca bcryptjs\r\n\r\nimport './Login.css';\r\n\r\nexport default function SignUpPage() {\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const saltRounds = 10; // define o número de rounds de sal usados para criptografia\r\n        const hashedPassword = bcrypt.hashSync(password, saltRounds); // criptografa a senha usando o bcryptjs\r\n  \r\n        const endpoint = `https://sngx3c6fe7.execute-api.sa-east-1.amazonaws.com/dev/cadastro`;\r\n        const params = {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ firstname, username,email, password: hashedPassword }) // envia a senha criptografada para a API\r\n        };\r\n        fetch(endpoint, params)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              // redireciona para a página de sucesso\r\n              history.push(\"/\");\r\n              window.alert(\"ue\");\r\n            } else if(res.status === 400){\r\n              // exibe uma mensagem de erro\r\n              window.alert(\"Email ja existe\");\r\n            } else if(res.status === 401){\r\n              // exibe uma mensagem de erro\r\n              window.alert(\"Username ja existe\");\r\n            }\r\n            else if(res.status === 402){\r\n              // exibe uma mensagem de erro\r\n              window.alert(\"Username e email ja existem\");\r\n            }\r\n\r\n            \r\n          });\r\n      }\r\n\r\n    return (\r\n        <div className=\"text-center m-5-auto\">\r\n            <h2>Join us</h2>\r\n            <h5>Create your personal account</h5>\r\n            <form onSubmit={handleLogin}>\r\n                <p>\r\n                    <label>Primeiro nome</label><br/>\r\n                    <input type=\"text\" name=\"first_name\" value={firstname} onChange={(e) => setFirstname(e.target.value)} required />\r\n                </p>\r\n                <p>\r\n                    <label>Username</label><br/>\r\n                    <input type=\"text\" name=\"first_name\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n                </p>\r\n                <p>\r\n                    <label>Email</label><br/>\r\n                    <input type=\"email\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}required />\r\n                </p>\r\n                <p>\r\n                    <label>Senha</label><br/>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                </p>\r\n                <p>\r\n                    <input type=\"checkbox\" name=\"checkbox\" id=\"checkbox\" required /> <span>I agree all statements in <a href=\"https://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">terms of service</a></span>.\r\n                </p>\r\n                <p>\r\n                    <button id=\"sub_btn\" type=\"submit\">Register</button>\r\n                </p>\r\n            </form>\r\n            <footer>\r\n                <p><Link to=\"/\">Back to Homepage</Link>.</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\HomePage.jsx",["66","67","68","69","70","71"],[],{"ruleId":"72","severity":1,"message":"73","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"72","severity":1,"message":"77","line":15,"column":10,"nodeType":"74","messageId":"75","endLine":15,"endColumn":14},{"ruleId":"72","severity":1,"message":"78","line":58,"column":15,"nodeType":"74","messageId":"75","endLine":58,"endColumn":19},{"ruleId":"72","severity":1,"message":"79","line":43,"column":10,"nodeType":"74","messageId":"75","endLine":43,"endColumn":18},{"ruleId":"72","severity":1,"message":"80","line":43,"column":20,"nodeType":"74","messageId":"75","endLine":43,"endColumn":31},{"ruleId":"72","severity":1,"message":"81","line":47,"column":9,"nodeType":"74","messageId":"75","endLine":47,"endColumn":13},{"ruleId":"72","severity":1,"message":"82","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":20},{"ruleId":"72","severity":1,"message":"83","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},{"ruleId":"72","severity":1,"message":"82","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":20},{"ruleId":"72","severity":1,"message":"77","line":3,"column":22,"nodeType":"74","messageId":"75","endLine":3,"endColumn":26},{"ruleId":"72","severity":1,"message":"84","line":16,"column":8,"nodeType":"74","messageId":"75","endLine":16,"endColumn":19},{"ruleId":"72","severity":1,"message":"85","line":37,"column":7,"nodeType":"74","messageId":"75","endLine":37,"endColumn":19},{"ruleId":"72","severity":1,"message":"78","line":65,"column":15,"nodeType":"74","messageId":"75","endLine":65,"endColumn":19},{"ruleId":"72","severity":1,"message":"86","line":93,"column":9,"nodeType":"74","messageId":"75","endLine":93,"endColumn":21},{"ruleId":"72","severity":1,"message":"78","line":103,"column":15,"nodeType":"74","messageId":"75","endLine":103,"endColumn":19},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Users' is defined but never used.","'Link' is defined but never used.","'user' is assigned a value but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'data' is assigned a value but never used.","'makeStyles' is defined but never used.","'bcrypt' is defined but never used.","'ButtonGroup' is defined but never used.","'handleSubmit' is assigned a value but never used.","'MinhaPosicao' is assigned a value but never used."]