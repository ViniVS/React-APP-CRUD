[{"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\index.js":"1","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\reportWebVitals.js":"2","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\App.jsx":"3","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\UserCreate.js":"4","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\Users.jsx":"5","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\Navbar.jsx":"6","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\UserUpdate.jsx":"7"},{"size":552,"mtime":1679539534297,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1679539534297,"results":"10","hashOfConfig":"9"},{"size":601,"mtime":1679539534297,"results":"11","hashOfConfig":"9"},{"size":5387,"mtime":1679539534297,"results":"12","hashOfConfig":"9"},{"size":5469,"mtime":1679539534297,"results":"13","hashOfConfig":"9"},{"size":1322,"mtime":1679539534297,"results":"14","hashOfConfig":"9"},{"size":4976,"mtime":1679539534297,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y9gn1c",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\index.js",[],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\reportWebVitals.js",[],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\App.jsx",[],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\UserCreate.js",[],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\Users.jsx",["38","39"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst handleSubmit = event => {\r\n  event.preventDefault();\r\n  window.location.href = '/create';\r\n}\r\n\r\nexport default function UserList() {\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    UsersGet()\r\n  }, [])\r\n\r\n  \r\n  const UsersGet = async () => {\r\n    try {\r\n      const response = await fetch(\"https://r4wj0utagf.execute-api.us-east-1.amazonaws.com/prod/dynamodb\");\r\n      const result = await response.json();\r\n      console.log(response);\r\n      if (result && typeof result === 'object') {\r\n        const user = {\r\n          id: result.id,\r\n          firstName: result.firstName,\r\n          lastName: result.lastName,\r\n          email: result.email,\r\n          userName: result.userName,\r\n          cpfCnpj: result.cpfCnpj\r\n        };\r\n        function compare(a, b) {\r\n          if (a.id < b.id) {\r\n            return -1;\r\n          }\r\n          if (a.id > b.id) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n        setUsers(result.map((user) => ({ ...user, key: user.id })).sort(compare));\r\n        console.log(result)\r\n      }else {\r\n        console.error('API response is not an array or object:', result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data from API Gateway:', error);\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  const UpdateUser = id => {\r\n    window.location = '/update/'+id\r\n  }\r\n\r\n  \r\n\r\n  const UserDelete = (id) => {\r\n    fetch(`https://r4wj0utagf.execute-api.us-east-1.amazonaws.com/prod/deleteusuarios?id=${id}`, {\r\n      method: 'GET'\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(id)\r\n          UsersGet();\r\n        } else {\r\n          throw new Error(`Failed to delete user. Status code: ${res.status}`);\r\n        }\r\n      })\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container className={classes.container} maxWidth=\"lg\">    \r\n        <Paper className={classes.paper}>\r\n          <Box display=\"flex\">\r\n            <Box flexGrow={1}>\r\n              <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                USERS\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={handleSubmit}>\r\n              CREATE\r\n            </Button>\r\n          </Box>\r\n          </Box>\r\n          <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"right\">ID</TableCell>\r\n                <TableCell align=\"left\">First</TableCell>\r\n                \r\n                <TableCell align=\"left\">Last Name</TableCell>\r\n                <TableCell align=\"left\">Email</TableCell>\r\n                <TableCell align=\"left\">Username</TableCell>\r\n                <TableCell align=\"left\">CPF ou CNPJ</TableCell>\r\n                <TableCell align=\"left\">Data</TableCell>\r\n                <TableCell align=\"center\">Action</TableCell>\r\n                \r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users.map((result) => (\r\n                <TableRow key={result.id}>\r\n                  <TableCell align=\"right\">{result.id}</TableCell>\r\n                  <TableCell align=\"left\">{result.firstName}</TableCell>\r\n                  <TableCell align=\"left\">{result.lastName}</TableCell>\r\n                  <TableCell align=\"left\">{result.email}</TableCell>\r\n                  <TableCell align=\"left\">{result.userName}</TableCell>\r\n                  <TableCell align=\"left\">{result.cpfCnpj}</TableCell>\r\n                  <TableCell align=\"left\">{result.date}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                    <Button key={`edit-${result.id}`} onClick={() => UpdateUser(result.id)}>Edit</Button>\r\n                    <Button key={`delete-${result.id}`} onClick={() => UserDelete(result.id)}>Del</Button>\r\n                  </ButtonGroup>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n}","D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\Navbar.jsx",[],[],"D:\\Users\\vinic\\OneDrive\\Documentos\\GitHub\\teste2\\src\\UserUpdate.jsx",[],[],{"ruleId":"40","severity":1,"message":"41","line":15,"column":10,"nodeType":"42","messageId":"43","endLine":15,"endColumn":14},{"ruleId":"40","severity":1,"message":"44","line":58,"column":15,"nodeType":"42","messageId":"43","endLine":58,"endColumn":19},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used."]